/**
 * 
 */
package methods;
import java.io.*;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import pomClasses.ReadWriteExcel;

/**
'#############################################################################################################################
'## SCRIPT NAME:                           GUI_CreateReservation_AVIS
'## BRAND:                                         AVIS
'## DESCRIPTION:                           Create Reservation for daily LOR with different insurance and counter products.
'## FUNCTIONAL AREA :                      Reservation Rates Screen
'## PRECONDITION:                          All the required Test Data should be available in Test Data Sheet.
'## OUTPUT:                                Reservation should be created successfully.
'#############################################################################################################################
 **/

public class GUI_CreateReservation_AVIS {

	public void clickRateshopSearchBtn(ChromeDriver driver)
	{
		JavascriptExecutor jse = (JavascriptExecutor)driver;
		String clickSearchJS = "document.getElementById('searchCommandLinkResRateCode').click()";
		jse.executeScript(clickSearchJS);
	}
	public void clickLogout(ChromeDriver driver)
	{
		JavascriptExecutor jse = (JavascriptExecutor)driver;
		String clickLogoutIcon = "document.getElementById('headerLogOutButton').click()";
		jse.executeScript(clickLogoutIcon);
		String clickLogoutBtn = "document.getElementById('logoutForm:yesLogoutButton').click()";
		jse.executeScript(clickLogoutBtn);
	}
	public void clickCreateResBtn(ChromeDriver driver)
	{
		JavascriptExecutor jse = (JavascriptExecutor)driver;
		String clickCRBtn = "document.getElementById('footerForm:footerCreateRes').click()";
		jse.executeScript(clickCRBtn);
	}

	public static void main(String[] args) throws IOException, Exception, FileNotFoundException
	{

	 //Read input from excel
	 for (int k=1; k<=4; k++)
		{
		  ReadWriteExcel rwe = new ReadWriteExcel("C:\\GUI_Automation\\selenium\\AVIS_GUITestData_CreateReservation.xlsx");
		  String Execute = rwe.getCellData("Avis_GUI",k,2); 	
		  if ( Execute.equals("Y") )
           {
			int a=27;
			System.setProperty("webdriver.chrome.driver","C:\\Users\\csurek\\Videos\\chromedriver_win32 (1)\\chromedriver.exe");
			ChromeDriver driver = new ChromeDriver();
			driver.manage().window().maximize();
			driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
     		System.out.println("iteration" +k);
			String tokenURL = rwe.getCellData("Avis_GUI", k, 6);
			driver.get(tokenURL);
	        Thread.sleep(2000);
			String WindowHandle = driver.getWindowHandle();
			Robot robot = new Robot();
			robot.keyPress(KeyEvent.VK_CONTROL);
			robot.keyPress(KeyEvent.VK_T);
			robot.keyRelease(KeyEvent.VK_CONTROL);
			robot.keyRelease(KeyEvent.VK_T);
			ArrayList<String> tabs = new ArrayList(driver.getWindowHandles());
			driver.switchTo().window(tabs.get(1));
			Thread.sleep(500);
			try
			 {
			   String clientURL = rwe.getCellData("Avis_GUI", k, 7);
			   String outSTA = rwe.getCellData("Avis_GUI", k, 8);
			   String thinClient = clientURL+outSTA;
			   driver.get(thinClient);
			   Assert.assertTrue(driver.getTitle().equals("Login")); // check whether page with title Login is loaded
			 }
			catch(Exception e)
			 {
			   System.out.println("Login page not found");
			 } 
			/*
			 * Login to GUI using token and thinclient URL
			 */
			String uName = rwe.getCellData("Avis_GUI", k, 9);
			String pswd = rwe.getCellData("Avis_GUI", k, 10);
			driver.findElement(By.name("username")).sendKeys(uName);
			driver.findElement(By.name("PASSWORD")).sendKeys(pswd);
			driver.findElement(By.xpath("//*[@id='content']/table/tbody/tr/td[2]/form/table/tbody/tr[3]/td/input[2]")).click();
			driver.findElement(By.xpath("//*[@id='menubar']/ul/li[4]/a")).click(); // clicks Reservation Rates tab
			Thread.sleep(500);
			/*
			 * Enter Customer Informations
			 */
     	    String lastname = rwe.getCellData("Avis_GUI", k , 11);
		    String firstname = rwe.getCellData("Avis_GUI", k , 12);
		    String codate = rwe.getCellData("Avis_GUI", k , 13);
		    String cotime = rwe.getCellData("Avis_GUI", k , 14);
		    String instation = rwe.getCellData("Avis_GUI", k , 15);
		    String cidate = rwe.getCellData("Avis_GUI", k , 16);
		    String citime = rwe.getCellData("Avis_GUI", k , 17);
			driver.findElement(By.id("menulist:rateshopContainer:resForm:lastName")).sendKeys(lastname);
			driver.findElement(By.id("menulist:rateshopContainer:resForm:firstName")).sendKeys(firstname);
			driver.findElement(By.id("menulist:rateshopContainer:resForm:checkout1_hid")).sendKeys(codate);
			driver.findElement(By.id("menulist:rateshopContainer:resForm:checkout2")).sendKeys(cotime);
			driver.findElement(By.id("menulist:rateshopContainer:resForm:returnStation:returnStation")).sendKeys(instation);
			driver.findElement(By.id("menulist:rateshopContainer:resForm:checkin1_hid")).sendKeys(cidate);
			driver.findElement(By.id("menulist:rateshopContainer:resForm:checkin2")).sendKeys(citime);
			Thread.sleep(1000);
            /*
             * Select car group
             */
		    WebElement carDropDown = driver.findElement(By.xpath("//*[@id='menulist:rateshopContainer:resForm:carGroup']"));
		    Select carDD = new Select(carDropDown);
		    String carGroup = rwe.getCellData("Avis_GUI", k , 18);
		    carDD.selectByVisibleText(carGroup);
		    GUI_CreateReservation_AVIS avis = new GUI_CreateReservation_AVIS();
		   /*
		    * Enter AWD
		    */
	    if(rwe.getCellData("Avis_GUI",k,19).isEmpty())
	     {   		
		   avis.clickRateshopSearchBtn(driver);
	       //Select Radio Button for Base Rate 
	       ArrayList<WebElement> radio = (ArrayList<WebElement>) driver.findElements(By.xpath("//input[@name='radioRate' and @type='radio']")); 
           for (int i=0;i<radio.size();i++)
	         {
	           if(radio.get(i).isDisplayed())
	          	 {
	          	   if(radio.get(i).isEnabled())
	          		 {
            		   radio.get(i).click();
	          		   if(radio.get(i).isSelected())
	          			{
	          			 break;  
	          			} 
	          			
	          			// Select available base rate from Standard rate table	
	                  else
	          			 {
	          			   driver.findElement(By.id("cancelButton")).click();
	          			   carDD.selectByIndex(0);  
	          			   avis.clickRateshopSearchBtn(driver);
	          		       for (int l=0;l<radio.size();l++)
	          		        {
	          		      	  if(radio.get(l).isDisplayed())
	          		      	   {
	          		      		if(radio.get(l).isEnabled())
	          		      		 {
	          		      		   radio.get(l).click();
	          		      		   if(radio.get(l).isSelected())
	          		      		    {
	          		      			   break;  
	          		      			} 
	          		      		  }
	          		      	    }
	          		         }
	          			  }
	          		  }
	          	  }
	          }
	       }
	       else
	       {
	    	   driver.findElement(By.xpath("//*[@id='menulist:rateshopContainer:resForm:discountNumber']")).sendKeys(rwe.getCellData("Avis_GUI",k,19));
	    	   avis.clickRateshopSearchBtn(driver);
	    	   WebElement ratetabel = driver.findElement(By.xpath("//*[@id='resRateLookupDlg:rateLookupForm:discountAwdRates']/table"));
	    	   ArrayList<WebElement> radio1 = (ArrayList<WebElement>) ratetabel.findElements(By.xpath("//input[@name='radioRate' and @type='radio']")); 
	           for (int i=0;i<radio1.size();i++)
	            {
	          	  if(radio1.get(i).isDisplayed())
	          	  {
	          		  if(radio1.get(i).isEnabled())
	          		  {
	          			radio1.get(i).click();
	          			  if(radio1.get(i).isSelected())
	          			  {
	          				  break;  
	          			  } 
	          		  
	          			// Select available base rate from Standard rate table	
	          			  else
	          			  {
	          				 driver.findElement(By.id("cancelButton")).click();
	          				 carDD.selectByIndex(0);  
	          				 avis.clickRateshopSearchBtn(driver);
	          		       for (int l=0;l<radio1.size();l++)
	          		        {
	          		      	  if(radio1.get(l).isDisplayed())
	          		      	  {
	          		      		  if(radio1.get(l).isEnabled())
	          		      		  {
	          		      			radio1.get(l).click();
	          		      			  if(radio1.get(l).isSelected())
	          		      			  {
	          		      				  break;  
	          		      			  } 
	          		      		  }
	          		      	  }
	          		        }
	          			  }
	          		  }
	          	  }
	            }
	         }
	       
        driver.findElement(By.xpath("//*[@id='rateshopResDlg']/div/div/div[3]/div/div[3]/input[1]")).click();   // clicks select rate button
        Thread.sleep(1000); 
        
        /*
         * Enter MOP details
         */
         WebElement MOPSection = driver.findElement(By.id("resPaymentInfoPanel"));
         WebElement MOPPanelHeading = MOPSection.findElement(By.className("panel-heading"));
         WebElement MOPExpandBtn = MOPPanelHeading.findElement(By.className("pull-right"));  
         try
         {
           if (MOPExpandBtn.isDisplayed())
           {
        	 if(MOPExpandBtn.isEnabled())
        	 {
        		 MOPExpandBtn.click();
        	 }
         }}
         catch(Exception e3)
         {
        	 e3.printStackTrace();
         }
//       Actions clickExpand = new Actions(driver);
//       clickExpand.moveToElement(driver.findElement(By.cssSelector(".pull-right.collapsed .glyphicon.glyphicon-plus"))).click().perform();
         WebElement cardDropDown = driver.findElement(By.id("menulist:rateshopContainer:resForm:creditCard:swipe:ccType"));
         Select cardDD = new Select(cardDropDown);
         String cardname = rwe.getCellData("Avis_GUI",k,20);
         cardDD.selectByVisibleText(cardname);
         driver.findElement(By.xpath("//*[@id='menulist:rateshopContainer:resForm:creditCard:swipe:ccNumber']")).sendKeys(rwe.getCellData("Avis_GUI", k, 21));
         driver.findElement(By.xpath("//*[@id='menulist:rateshopContainer:resForm:creditCard:swipe:ccExpireMonth']")).sendKeys(rwe.getCellData("Avis_GUI", k, 22));
         driver.findElement(By.xpath("//*[@id='menulist:rateshopContainer:resForm:creditCard:swipe:ccExpireYear']")).sendKeys(rwe.getCellData("Avis_GUI", k, 23));
         WebElement reasonDropDown = driver.findElement(By.id("menulist:rateshopContainer:resForm:creditCard:swipe:paymentReason"));
         Select rsnDD = new Select(reasonDropDown);
         String reason = rwe.getCellData("Avis_GUI",k,24);
         rsnDD.selectByVisibleText(reason);

        /*
         * Add Insurances
         */ 
         Thread.sleep(5000);
         WebElement PAPSection = driver.findElement(By.id("resCoveragesInfoPanel"));
         WebElement PAPPanelHeader = PAPSection.findElement(By.className("panel-heading"));
         WebElement PAPExpandBtn = PAPPanelHeader.findElement(By.className("pull-right"));
         try
         {
           if (PAPExpandBtn.isDisplayed())
           {
        	 if(PAPExpandBtn.isEnabled())
        	 {
        		 PAPExpandBtn.click();
        	 }
         }}
         catch(Exception e4)
         {
        	 e4.printStackTrace();
         }
        if(rwe.getCellData("Avis_GUI", k, 25).isEmpty())
        {
        	System.out.print("No Insurance selected");
        }
        else
          {
//            SplitString ss = new SplitString();
//            String splitVal = ss.SplitString(rwe.getCellData("Avis_GUI", k, 25));
//            System.out.print(splitVal);
            String[] insVal = rwe.getCellData("Avis_GUI", k, 25).split("-");
            for(String e:insVal)
            {
            	WebDriverWait wait1 = new WebDriverWait(driver,10);
            	
            	if (e.equalsIgnoreCase("LDW"))
            	{
                    WebElement insurace1 = driver.findElement(By.id("menulist:rateshopContainer:resForm:coverageLdwYesNo"));
                    Select insLDW = new Select(insurace1);
                    wait1.until(ExpectedConditions.visibilityOf(insurace1));
                    if(insurace1.isDisplayed())
                    {
                        insLDW.selectByVisibleText("Yes");
                    }
                    else
                    {
                    	break;
                    }
            		
            	}
            	else if(e.equalsIgnoreCase("PAI"))
            	{
                    WebElement insurace2 = driver.findElement(By.id("menulist:rateshopContainer:resForm:coveragePaiYesNo"));
                    Select insPAI = new Select(insurace2);
                    wait1.until(ExpectedConditions.visibilityOf(insurace2));
                    if(insurace2.isDisplayed())
                    {
                    	  insPAI.selectByVisibleText("Yes");
                    }
                    else
                    {
                    	break;
                    }
            	}
            	else if(e.equalsIgnoreCase("PEP"))
            	{
                    WebElement insurace3 = driver.findElement(By.id("menulist:rateshopContainer:resForm:coveragePepYesNo"));
                    Select insPEP = new Select(insurace3);
                    wait1.until(ExpectedConditions.visibilityOf(insurace3));
                    if(insurace3.isDisplayed())
                    {
                    	insPEP.selectByVisibleText("Yes");
                    }
                    else
                    {
                    	break;
                    }
                    
            	}
            	else if(e.equalsIgnoreCase("ALI"))
            	{
                    WebElement insurace4 = driver.findElement(By.id("menulist:rateshopContainer:resForm:coverageAliYesNo"));
                    Select insALI = new Select(insurace4);
                    wait1.until(ExpectedConditions.visibilityOf(insurace4));
                    if(insurace4.isDisplayed())
                    {
                    	insALI.selectByVisibleText("Yes");
                    }
                    else
                    {
                    	break;
                    }
            	}  
            	else if(e.equalsIgnoreCase("FSO"))
            	{
                    WebElement insurace5 = driver.findElement(By.id("menulist:rateshopContainer:resForm:fuelServiceOption"));
                    Select insFSO = new Select(insurace5);
                    wait1.until(ExpectedConditions.visibilityOf(insurace5));
                    if(insurace5.isDisplayed())
                    {
                    	insFSO.selectByVisibleText("Yes");
                    }
                    else
                    {
                    	break;
                    }
            	}
 			
            	else
            	{
            		break;
            	}
            }
                   
        }
        
        /*
         * Add CounterProducts
         */
        
        if(rwe.getCellData("Avis_GUI", k, 26).isEmpty())
        {
        	System.out.print("No CounterProduct selected");
        	//break;
        }
        else
        {
            String[] cpVal = rwe.getCellData("Avis_GUI", k, 26).split("-");
            for(String e:cpVal)
            {
            	WebDriverWait wait = new WebDriverWait(driver,10);
            try
            {
            	if (e.equalsIgnoreCase("ADR"))
            	{
                    WebElement cp1 = driver.findElement(By.id("productQuantity40"));
                    Select cpADR = new Select(cp1);
                    wait.until(ExpectedConditions.visibilityOf(cp1));
                    if(cp1.isDisplayed())
                    {
                    	cpADR.selectByVisibleText("1");
                    }
                    else
                    {
                    	break;
                    }
                    
              	}
            	else if(e.equalsIgnoreCase("CBS"))
            	{
                    WebElement cp2 = driver.findElement(By.id("productQuantity32"));
                    Select cpCBS = new Select(cp2);
                    wait.until(ExpectedConditions.visibilityOf(cp2));
                    if(cp2.isDisplayed())
                    {
                    	cpCBS.selectByVisibleText("1");
                    }
                    else
                    {
                    	break;
                    }
            	}
            	else if(e.equalsIgnoreCase("CSS"))
            	{
                    WebElement cp3 = driver.findElement(By.id("productQuantity34"));
                    Select cpCSS = new Select(cp3);
                    wait.until(ExpectedConditions.visibilityOf(cp3));
                    if(cp3.isDisplayed())
                    {
                    	 cpCSS.selectByVisibleText("1");
                    }
                    else
                    {
                    	break;
                    }
            	}
            	else if(e.equalsIgnoreCase("GPS"))
            	{
                    WebElement cp4 = driver.findElement(By.id("productQuantityYesNo6"));
                    Select cpGPS = new Select(cp4);
                    wait.until(ExpectedConditions.visibilityOf(cp4));
                    if(cp4.isDisplayed())
                    {
                    	cpGPS.selectByVisibleText("Y");
                    }
                    else
                    {
                    	break;
                    }
            	}  
            	else if(e.equalsIgnoreCase("RSN"))
            	{
                    WebElement cp5 = driver.findElement(By.id("productQuantityYesNo11"));
                    Select cpRSN = new Select(cp5);
                    wait.until(ExpectedConditions.visibilityOf(cp5));
                    if(cp5.isDisplayed())
                    {
                    	 cpRSN.selectByVisibleText("Y");
                    }
                    else
                    {
                    	break;
                    }
            	}
            	else if(e.equalsIgnoreCase("TAB"))
            	{
                    WebElement cp6 = driver.findElement(By.id("productQuantityYesNo12"));
                    Select cpTAB = new Select(cp6);
                    wait.until(ExpectedConditions.visibilityOf(cp6));
                    if(cp6.isDisplayed())
                    {
                        cpTAB.selectByVisibleText("Y");
                    }
                    else
                    {
                    	break;
                    }
            	}
            	else if(e.equalsIgnoreCase("ESP"))
            	{
                    WebElement cp7 = driver.findElement(By.id("productQuantityYesNo6"));
                    Select cpESP = new Select(cp7);
                    wait.until(ExpectedConditions.visibilityOf(cp7));
                    if(cp7.isDisplayed())
                    {
                    	cpESP.selectByVisibleText("Y");
                    }
                    else
                    {
                    	break;
                    }
                    
            	}
            	else if(e.equalsIgnoreCase("SNB"))
            	{
                    WebElement cp8 = driver.findElement(By.id("productQuantityYesNo11"));
                    Select cpSNB = new Select(cp8);
                    if(cp8.isDisplayed())
                    {
                    	 wait.until(ExpectedConditions.visibilityOf(cp8));
                    	cpSNB.selectByVisibleText("Y");
                    }
                    else
                    {
                    	break;
                    }
            	}
            }
            	catch(Exception e1)
            	{
            		e1.printStackTrace();
            	} 			
            }
                   
        }
        
        /*
         * Create reservation
         */
        
        avis.clickCreateResBtn(driver);
        Thread.sleep(1000); 
        String Resmsg = driver.findElement(By.xpath("//*[@id='templateInfoForm:templateInfoMsg']")).getText();
        rwe.setCellData("Avis_GUI",k,40,Resmsg);  //write respopup in excel
        Thread.sleep(1000);
        driver.findElement(By.xpath("//*[@id='templateInfoForm:templateInfoButton']")).click(); // clicks OK button in Reservation pop up

  /*
  * to print QV data in Excel
  */

        WebElement res = driver.findElement(By.cssSelector("#quickViewPanel > div.panel-body > table > tbody > tr:nth-child(8) > td > div:nth-child(2) > div > table > tbody > tr > td:nth-child(2) > a > span"));        
       
        try
        {
        	if(res.getText().isEmpty())
             {
                WebDriverWait wait1 = new WebDriverWait(driver, 20);
                wait1.until(ExpectedConditions.visibilityOf(res));     
             }
        }
        catch(Exception e2)
        {
        	e2.printStackTrace();
        }
        WebElement table = driver.findElement(By.id("resQvForm"));
        ArrayList<WebElement> rows = (ArrayList<WebElement>) table.findElements(By.tagName("tr"));
        for(int i=1; i<rows.size(); i++)
        {
            ArrayList<WebElement> cells= (ArrayList<WebElement>) rows.get(i).findElements(By.tagName("td"));
              for(int j=0; j<cells.size(); j++)
              {
                  String val = cells.get(j).getText();
                  if(val.isEmpty())
                  {
                	  break;
                  }
                  else
                  {
                	 if (j==2)
                	 {    
                		  val = val.replaceAll("[*]", ""); //Remover '*' before rates
                		  rwe.setCellData("Avis_GUI",k,a,val);
                		  a++;
                	 }
                  }
              }
        }        
        /*
         * Log out and close tabs
         */
       
        avis.clickLogout(driver); 
        Thread.sleep(1000);
        driver.switchTo().window(tabs.get(1)).close();
        driver.switchTo().window(tabs.get(0)).close();   
        if(rwe.getCellData("Avis_GUI", k, 27).isEmpty())
        {
        	rwe.setCellData("Avis_GUI", k, 41, "FAIL");
        }
        else
        {
        	rwe.setCellData("Avis_GUI", k, 41, "PASS");
        }
	  }
		else
		{
			System.out.println("Execution status is N for iteration "+k+"...");
		}

   }

  }
	
}
		
